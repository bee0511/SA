
#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    server_tokens off;  # Hide Nginx version
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/local/www/nginx;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

        # Uncomment the following block if you need to configure PHP processing
        # location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        # }

        # Uncomment the following block to deny access to .htaccess files
        # location ~ /\.ht {
        #    deny  all;
        # }
    }

    server {
        listen 80;
        server_name 92.cs.nycu;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name 92.cs.nycu;

        # SSL certificate and key paths
        ssl_certificate /etc/nginx/certs/fullchain.cer;
        ssl_certificate_key /etc/nginx/certs/92.cs.nycu.key;
	ssl_trusted_certificate /etc/nginx/certs/ca.cer;
		
        # Enable HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

        # Other SSL-related settings (adjust as needed)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

        # Location block for your website content
        location / {
            root /home/judge/www/92.cs.nycu;
            index index.html;
        }
    }

    server {
        listen 80;
        server_name 10.113.92.11;

        location /private {
        # Only allow access from specified IPs
        allow 10.113.92.254;
        allow 127.0.0.1;
        deny all;

        # Deny access with domain {ID}.cs.nycu
        if ($http_host ~* "^(.*)\.cs\.nycu$") {
            return 403;
            }

        # Basic Authentication for localhost
        satisfy any;
        allow 127.0.0.1;
        deny all;
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Secret content for authenticated users
        location ~ ^/private {
            alias /path/to/your/secret/content;
            index index.html;
            }
        }

        # Location block for your website content
        location / {
            root /home/judge/www/10.113.92.11;
            index index.html;
        }
    }
    #log_format combined '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format agent '$remote_addr | $request | $http_user_agent is my Agent Info.';

    # Access logs
    access_log /home/judge/log/access.log combined;
    access_log /home/judge/log/compressed.log.gz agent gzip buffer=32k flush=5s;
}
